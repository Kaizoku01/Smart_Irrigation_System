io.flutter.plugins.firebase.core.FlutterFirebasePlugin
com.google.firebase.analytics.FirebaseAnalytics
androidx.window.layout.SidecarCompat$TranslatingCallback
androidx.window.core.ExperimentalWindowApi
io.flutter.embedding.android.FlutterSplashView$SavedState
androidx.window.layout.ActivityCompatHelperApi24
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
io.flutter.plugins.firebase.database.FlutterFirebaseAppRegistrar
com.google.android.gms.common.api.Scope
androidx.window.layout.WindowMetrics
androidx.window.embedding.ActivityRule
com.google.android.gms.common.annotation.KeepName
com.google.android.gms.common.api.internal.LifecycleCallback
io.flutter.embedding.engine.FlutterOverlaySurface
androidx.window.layout.SidecarCompat$FirstAttachAdapter
androidx.window.embedding.SplitRuleParser
androidx.annotation.Keep
androidx.core.graphics.drawable.IconCompatParcelizer
androidx.activity.ComponentActivity$2
androidx.window.core.Version$bigInteger$2
com.google.android.gms.auth.api.signin.GoogleSignInAccount
com.google.firebase.FirebaseCommonRegistrar
androidx.window.layout.FoldingFeature$OcclusionType$Companion
com.google.firebase.provider.FirebaseInitProvider
io.flutter.view.AccessibilityViewEmbedder
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
androidx.window.layout.DisplayCompatHelperApi28
io.flutter.plugins.GeneratedPluginRegistrant
android.support.v4.graphics.drawable.IconCompatParcelizer
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
androidx.window.layout.SidecarWindowBackend
androidx.window.layout.SidecarAdapter
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
androidx.window.embedding.EmbeddingTranslatingCallback
androidx.window.layout.FoldingFeature
com.google.firebase.analytics.ktx.FirebaseAnalyticsKtxRegistrar
com.google.android.gms.common.util.DynamiteApi
androidx.window.layout.SidecarWindowBackend$Companion
androidx.savedstate.Recreator
androidx.window.embedding.ActivityStack
com.google.firebase.ktx.FirebaseCommonKtxRegistrar
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
com.google.firebase.components.ComponentDiscoveryService
androidx.window.layout.HardwareFoldingFeature$Type$Companion
androidx.window.layout.WindowInfoTracker
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService
androidx.window.embedding.SplitInfo
io.flutter.view.FlutterCallbackInformation
kotlin.internal.jdk8.JDK8PlatformImplementations
com.google.android.gms.measurement.AppMeasurement
com.google.android.gms.common.internal.ReflectedParcelable
com.google.android.gms.common.GooglePlayServicesManifestException
androidx.window.embedding.SplitPairRule
androidx.window.layout.ActivityCompatHelperApi30
androidx.window.embedding.SplitRule$LayoutDir
com.google.android.gms.measurement.AppMeasurementReceiver
androidx.window.layout.EmptyDecorator
androidx.fragment.app.Fragment$2
com.google.firebase.concurrent.ExecutorsRegistrar
androidx.window.layout.HardwareFoldingFeature$Companion
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
androidx.lifecycle.CompositeGeneratedAdaptersObserver
androidx.savedstate.SavedStateRegistry$1
androidx.window.layout.FoldingFeature$State
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
com.google.android.gms.measurement.AppMeasurementJobService
androidx.activity.ComponentActivity$3
androidx.window.layout.FoldingFeature$Orientation$Companion
com.google.android.gms.common.api.internal.BasePendingResult
io.flutter.plugin.platform.SingleViewPresentation
androidx.window.R$styleable
androidx.window.core.Bounds
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar
androidx.window.core.Version$Companion
androidx.window.layout.WindowInfoTrackerImpl
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty
androidx.window.layout.FoldingFeature$State$Companion
androidx.lifecycle.SingleGeneratedAdapterObserver
androidx.window.layout.FoldingFeature$OcclusionType
androidx.versionedparcelable.ParcelImpl
androidx.window.layout.WindowMetricsCalculatorDecorator
androidx.window.embedding.EmptyEmbeddingComponent
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1
kotlinx.coroutines.android.AndroidDispatcherFactory
com.google.firebase.components.ComponentRegistrar
com.google.android.gms.common.api.GoogleApiActivity
com.google.firebase.installations.FirebaseInstallationsRegistrar
androidx.window.layout.SidecarCompat$DistinctElementCallback
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1
androidx.window.layout.HardwareFoldingFeature$Type
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
androidx.window.core.Version
androidx.window.layout.WindowMetricsCalculatorCompat
androidx.window.layout.WindowMetricsCalculator
androidx.window.embedding.SplitRule
androidx.lifecycle.ReflectiveGenericLifecycleObserver
kotlinx.coroutines.internal.StackTraceRecoveryKt
androidx.core.app.CoreComponentFactory
androidx.lifecycle.Lifecycling$1
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter
io.flutter.embedding.engine.FlutterJNI
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
androidx.window.layout.SidecarCompat$Companion
com.google.android.gms.measurement.AppMeasurementService
androidx.core.app.RemoteActionCompat
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
kotlin.coroutines.jvm.internal.BaseContinuationImpl
androidx.window.layout.WindowInfoTracker$Companion
androidx.window.R$id
androidx.window.embedding.MatcherUtils
com.example.irrigation_control_panel.MainActivity
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
androidx.window.embedding.ExtensionEmbeddingBackend
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry
androidx.window.layout.WindowBackend
androidx.window.embedding.EmbeddingInterfaceCompat
androidx.core.graphics.drawable.IconCompat
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
androidx.window.layout.ExtensionInterfaceCompat
androidx.window.embedding.SplitPairFilter
androidx.window.layout.SidecarAdapter$Companion
androidx.window.layout.WindowInfoTrackerDecorator
androidx.window.layout.FoldingFeature$Orientation
androidx.window.layout.ExtensionWindowLayoutInfoBackend
androidx.window.embedding.SplitController$Companion
androidx.lifecycle.FullLifecycleObserverAdapter
com.google.android.gms.common.api.Status
androidx.window.embedding.EmbeddingBackend
androidx.window.layout.WindowMetricsCalculator$Companion
androidx.window.layout.HardwareFoldingFeature
androidx.window.embedding.SplitRule$Api30Impl
androidx.activity.ImmLeaksCleaner
androidx.window.layout.SidecarCompat
androidx.window.embedding.EmbeddingCompat
androidx.window.layout.WindowLayoutInfo
androidx.window.embedding.EmbeddingCompat$Companion
androidx.window.embedding.EmbeddingAdapter
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
kotlin.internal.jdk7.JDK7PlatformImplementations
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor
android.support.v4.app.RemoteActionCompatParcelizer
androidx.window.layout.DisplayFeature
androidx.window.java.R
androidx.window.layout.DisplayCompatHelperApi17
androidx.lifecycle.LiveData$LifecycleBoundObserver
androidx.window.embedding.EmbeddingRule
androidx.window.R
androidx.core.app.RemoteActionCompatParcelizer
androidx.window.embedding.SplitController
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar
androidx.window.embedding.SplitPlaceholderRule
androidx.window.R$attr
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
androidx.window.embedding.ActivityFilter
androidx.window.layout.WindowInfoTrackerImpl$Companion
com.google.firebase.database.DatabaseRegistrar
androidx.versionedparcelable.CustomVersionedParcelable
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1
com.google.android.gms.internal.measurement.zzgy: boolean zzi
androidx.window.R$attr: int finishSecondaryWithPrimary
com.google.android.gms.internal.measurement.zzff: long zze
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
com.google.android.gms.internal.measurement.zzft: com.google.android.gms.internal.measurement.zzli zze
com.google.android.gms.internal.measurement.zzfd: int zzh
com.google.android.gms.internal.measurement.zzfp: com.google.android.gms.internal.measurement.zzfp zza
com.google.android.gms.internal.measurement.zzgp: com.google.android.gms.internal.measurement.zzgp zza
kotlinx.coroutines.CancelledContinuation: int _resumed
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
com.google.android.gms.internal.measurement.zzgg: com.google.android.gms.internal.measurement.zzgg zza
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.concurrent.locks.ReentrantLock lock
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzi
androidx.window.core.Version: java.lang.String description
androidx.window.embedding.SplitPairRule: java.util.Set filters
com.google.android.gms.internal.measurement.zzcl: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowInfoTrackerImpl$Companion Companion
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
com.google.android.gms.internal.measurement.zzfj: int zzd
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mExpiredEventParams
com.google.android.gms.internal.measurement.zzem: int zzd
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfh: java.lang.String zze
androidx.window.R$styleable: int SplitPairRule_splitRatio
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
com.google.android.gms.internal.measurement.zzfz: java.lang.String zze
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
com.google.android.gms.internal.measurement.zzff: java.lang.String zzq
com.google.android.gms.measurement.internal.zzq: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
kotlinx.coroutines.InvokeOnCancelling: int _invoked
com.google.firebase.database.DatabaseRegistrar: java.lang.String LIBRARY_NAME
androidx.window.embedding.SplitPairFilter: android.content.ComponentName primaryActivityName
com.google.android.gms.internal.measurement.zzfb: int zzd
com.google.android.gms.internal.measurement.zzgm: java.lang.String zzg
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: android.app.Activity $activity
com.google.android.gms.internal.measurement.zzgd: int zze
com.google.android.gms.internal.measurement.zzfx: java.lang.String zze
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzO
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzf
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
androidx.window.R$attr: int alwaysExpand
com.google.android.gms.internal.measurement.zzgd: int zzY
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
com.google.android.gms.internal.measurement.zzei: com.google.android.gms.internal.measurement.zzli zzf
androidx.window.R$styleable: int ActivityFilter_activityAction
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface callback
androidx.window.embedding.ActivityRule: boolean alwaysExpand
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzlb: com.google.android.gms.internal.measurement.zznl zzc
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.google.android.gms.internal.measurement.zzgm: float zzi
com.google.android.gms.internal.measurement.zzgr: int zzd
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzL
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTimeToLive
com.google.android.gms.internal.measurement.zzgk: com.google.android.gms.internal.measurement.zzlh zzf
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.google.android.gms.internal.measurement.zzff: boolean zzl
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzlh zze
kotlinx.coroutines.DispatchedCoroutine: int _decision
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.zzs: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgm: java.lang.String zzf
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.google.android.gms.internal.measurement.zzft: long zzg
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
androidx.window.layout.SidecarWindowBackend: java.lang.String TAG
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
com.google.android.gms.internal.measurement.zzfd: boolean zzf
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap
com.google.android.gms.internal.measurement.zzgd: long zzm
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
com.google.android.gms.internal.measurement.zzey: java.lang.String zzf
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
com.google.android.gms.internal.measurement.zzgk: int zze
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzH
com.google.android.gms.internal.measurement.zzff: java.lang.String zzp
com.google.android.gms.internal.measurement.zzgd: boolean zzZ
com.google.android.gms.internal.measurement.zzei: int zze
androidx.window.R$attr: int secondaryActivityAction
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzli zzi
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzR
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
com.google.android.gms.internal.measurement.zzgy: int zzd
com.google.android.gms.internal.measurement.zzei: boolean zzi
kotlin.jvm.internal.CallableReference: boolean isTopLevel
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzad
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
androidx.window.R$attr: int splitLayoutDirection
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.app.Activity $activity
com.google.android.gms.internal.measurement.zzgd: int zzJ
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzli zzi
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
com.google.android.gms.internal.measurement.zzek: int zzd
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlinx.coroutines.flow.Flow $flow
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion
com.google.android.gms.internal.measurement.zzgd: long zzk
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzq
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
androidx.window.R$styleable: int[] ActivityRule
com.google.android.gms.measurement.internal.zzau: android.os.Parcelable$Creator CREATOR
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
com.google.android.gms.measurement.internal.zzaw: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfv: com.google.android.gms.internal.measurement.zzfv zza
com.google.android.gms.internal.measurement.zzff: java.lang.String zzo
com.google.android.gms.internal.measurement.zzgr: java.lang.String zze
com.google.android.gms.internal.measurement.zzek: boolean zzk
com.google.android.gms.internal.measurement.zzgt: int zzd
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzg
com.google.android.gms.internal.measurement.zzlb: java.util.Map zza
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
com.google.android.gms.internal.measurement.zzft: com.google.android.gms.internal.measurement.zzft zza
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzgd zzd
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggerEventName
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
com.google.android.gms.internal.measurement.zzfp: int zzd
com.google.android.gms.internal.measurement.zzff: int zzd
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
com.google.android.gms.internal.measurement.zzei: int zzd
com.google.android.gms.internal.measurement.zzlb: int zzd
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTimedOutEventName
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzy
com.google.android.gms.internal.measurement.zzgd: long zzw
io.flutter.plugin.platform.SingleViewPresentation: int viewId
com.google.android.gms.internal.measurement.zzek: boolean zzj
com.google.android.gms.internal.measurement.zzey: int zzd
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzli zzm
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
kotlin.jvm.internal.CallableReference: java.lang.String signature
com.google.android.gms.internal.measurement.zzgg: int zzd
kotlin.jvm.internal.Lambda: int arity
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
com.google.android.gms.internal.measurement.zzfv: java.lang.String zze
com.google.android.gms.internal.measurement.zzfx: long zzg
androidx.window.R$attr: int activityName
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.window.R$attr: int activityAction
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggeredEventName
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzX
kotlinx.coroutines.CancellableContinuationImpl: int _decision
com.google.android.gms.internal.measurement.zzgd: long zzV
com.google.android.gms.internal.measurement.zzgd: long zzn
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzr
com.google.android.gms.internal.measurement.zzey: com.google.android.gms.internal.measurement.zzli zzh
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
kotlin.jvm.internal.FunctionReference: int arity
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzli zzf
com.google.android.gms.internal.measurement.zzer: java.lang.String zzh
com.google.android.gms.internal.measurement.zzet: int zzd
androidx.window.layout.WindowInfoTrackerImpl: int BUFFER_CAPACITY
kotlinx.coroutines.JobSupport: java.lang.Object _state
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
com.google.android.gms.internal.measurement.zzet: com.google.android.gms.internal.measurement.zzet zza
com.google.android.gms.internal.measurement.zzfn: com.google.android.gms.internal.measurement.zzfn zza
com.google.android.gms.common.zzo: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzp
com.google.android.gms.internal.measurement.zzff: int zzg
com.google.android.gms.internal.measurement.zzek: com.google.android.gms.internal.measurement.zzli zzg
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
com.google.android.gms.internal.measurement.zzgg: com.google.android.gms.internal.measurement.zzli zzf
kotlinx.coroutines.channels.ArrayChannel: int size
com.google.android.gms.internal.measurement.zzfj: java.lang.String zzf
com.google.android.gms.internal.measurement.zzky: com.google.android.gms.internal.measurement.zzks zza
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$2
androidx.window.layout.SidecarWindowBackend: boolean DEBUG
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzli zzh
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
com.google.android.gms.internal.measurement.zzfx: double zzi
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzfz zzac
com.google.android.gms.internal.measurement.zzft: java.lang.String zzf
androidx.window.layout.SidecarAdapter: java.lang.String TAG
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface extensionCallback
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mName
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzE
com.google.android.gms.internal.measurement.zzer: java.lang.String zzg
com.google.android.gms.internal.measurement.zzer: java.lang.String zzi
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
androidx.window.R$styleable: int SplitPairRule_clearTop
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
com.google.android.gms.internal.measurement.zzgd: int zzg
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
kotlin.jvm.internal.CallableReference: java.lang.String name
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance
androidx.window.embedding.SplitInfo: float splitRatio
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.Object mValue
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.WeakHashMap mActivityWindowLayoutInfo
androidx.window.R$attr: int splitMinWidth
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mOrigin
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity
com.google.android.gms.internal.measurement.zzfv: long zzf
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzli zzj
com.google.android.gms.internal.measurement.zzgd: long zzl
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
com.google.android.gms.internal.measurement.zzgd: int zza
com.google.android.gms.internal.measurement.zzgd: long zzag
com.google.android.gms.internal.measurement.zzey: boolean zzg
androidx.window.R$attr: int secondaryActivityName
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
com.google.android.gms.internal.measurement.zzgm: int zzd
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.lang.String LIBRARY_NAME
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
com.google.android.gms.internal.measurement.zzfx: int zzd
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarCompat$DistinctElementCallback: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
com.google.android.gms.internal.measurement.zzgd: int zzs
com.google.android.gms.internal.measurement.zzfr: long zzf
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
androidx.window.layout.DisplayCompatHelperApi28: androidx.window.layout.DisplayCompatHelperApi28 INSTANCE
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzk
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mCreationTimestamp
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
androidx.window.core.Bounds: int bottom
com.google.android.gms.internal.measurement.zzgb: com.google.android.gms.internal.measurement.zzli zzd
com.google.android.gms.internal.measurement.zzff: java.lang.String zzk
com.google.android.gms.internal.measurement.zzem: com.google.android.gms.internal.measurement.zzer zzf
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgy: java.lang.String zzg
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
com.google.android.gms.internal.measurement.zzgm: long zzh
androidx.window.R$id: int rtl
androidx.window.R$attr: int placeholderActivityName
com.google.android.gms.internal.measurement.zzfb: com.google.android.gms.internal.measurement.zzli zzf
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
com.google.android.gms.internal.measurement.zzgd: int zzK
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
androidx.window.R$attr: int splitRatio
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
androidx.window.core.Bounds: int top
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners
com.google.android.gms.internal.measurement.zzgd: long zzU
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
com.google.android.gms.internal.measurement.zzff: java.lang.String zzf
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
com.google.android.gms.internal.measurement.zzfz: com.google.android.gms.internal.measurement.zzfz zza
com.google.android.gms.internal.measurement.zzfp: int zze
androidx.window.R$styleable: int[] ActivityFilter
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.concurrent.locks.ReentrantLock lock
androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners
androidx.window.embedding.SplitRule: int minWidth
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
androidx.window.R$styleable: int ActivityRule_alwaysExpand
com.google.android.gms.internal.measurement.zzgd: long zzB
androidx.window.core.Bounds: int left
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.google.android.gms.internal.measurement.zzek: com.google.android.gms.internal.measurement.zzek zza
androidx.window.layout.SidecarCompat$TranslatingCallback: androidx.window.layout.SidecarCompat this$0
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
androidx.window.R$attr: int finishPrimaryWithSecondary
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzD
kotlin.jvm.internal.CallableReference: java.lang.Class owner
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
com.google.android.gms.internal.measurement.zzfz: int zzd
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: androidx.window.layout.SidecarCompat this$0
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzh
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
androidx.window.layout.SidecarCompat$FirstAttachAdapter: androidx.window.layout.SidecarCompat sidecarCompat
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
com.google.android.gms.internal.measurement.zzfd: boolean zzg
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
androidx.window.core.Bounds: int right
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
com.google.android.gms.internal.measurement.zzfn: int zzd
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
com.google.android.gms.internal.measurement.zzem: com.google.android.gms.internal.measurement.zzey zze
com.google.android.gms.internal.measurement.zzgd: boolean zzab
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzo
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
androidx.window.embedding.SplitRule: float splitRatio
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfj: com.google.android.gms.internal.measurement.zzfj zza
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
com.google.android.gms.internal.measurement.zzet: com.google.android.gms.internal.measurement.zzem zzg
androidx.window.R$styleable: int SplitPairRule_splitMinWidth
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth
com.google.android.gms.internal.measurement.zzfd: com.google.android.gms.internal.measurement.zzfd zza
com.google.android.gms.internal.measurement.zzei: com.google.android.gms.internal.measurement.zzli zzg
com.google.android.gms.internal.measurement.zzgg: int zze
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
com.google.android.gms.internal.measurement.zzey: int zze
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: int label
com.google.android.gms.internal.measurement.zzfd: int zzd
com.google.android.gms.internal.measurement.zzer: int zzd
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
androidx.window.R$attr: int primaryActivityName
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: boolean mActive
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzA
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
androidx.window.layout.SidecarAdapter: androidx.window.layout.SidecarAdapter$Companion Companion
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
androidx.window.layout.SidecarCompat: java.lang.String TAG
androidx.window.R$id: int ltr
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
androidx.window.layout.ActivityCompatHelperApi30: androidx.window.layout.ActivityCompatHelperApi30 INSTANCE
com.google.android.gms.common.internal.zzj: android.os.Parcelable$Creator CREATOR
androidx.window.R$attr: int clearTop
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTimedOutEventParams
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzli zzae
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
com.google.android.gms.internal.measurement.zzgr: com.google.android.gms.internal.measurement.zzli zzf
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzu
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
com.google.android.gms.internal.measurement.zzgy: java.lang.String zzh
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzli zzg
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
androidx.window.R$styleable: int ActivityFilter_activityName
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.google.android.gms.internal.measurement.zzgk: int zzd
com.google.android.gms.internal.measurement.zzer: com.google.android.gms.internal.measurement.zzer zza
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
com.google.android.gms.internal.measurement.zzgd: int zzI
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
com.google.android.gms.internal.measurement.zzgt: com.google.android.gms.internal.measurement.zzli zze
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend windowBackend
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
com.google.android.gms.internal.measurement.zzgd: int zzQ
androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzv
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzli zzn
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggeredTimestamp
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback callbackInterface
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
com.google.android.gms.internal.measurement.zzfr: int zze
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingAdapter adapter
com.google.android.gms.internal.measurement.zzfz: java.lang.String zzf
com.google.android.gms.internal.measurement.zzgd: int zzC
androidx.window.R$id: int locale
com.google.android.gms.internal.measurement.zzek: java.lang.String zzf
androidx.window.embedding.SplitPairRule: boolean clearTop
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
com.google.android.gms.internal.measurement.zzfh: java.lang.String zzf
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
com.google.android.gms.internal.measurement.zzgd: boolean zzz
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mExpiredEventName
com.google.android.gms.internal.measurement.zzfx: com.google.android.gms.internal.measurement.zzfx zza
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: androidx.core.util.Consumer $consumer$inlined
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
androidx.window.layout.ActivityCompatHelperApi24: androidx.window.layout.ActivityCompatHelperApi24 INSTANCE
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
com.google.android.gms.internal.measurement.zzgd: long zzj
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzlh zzd
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
com.google.android.gms.internal.measurement.zzek: com.google.android.gms.internal.measurement.zzer zzi
com.google.android.gms.internal.measurement.zzgy: com.google.android.gms.internal.measurement.zzli zzf
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfb: boolean zzg
com.google.android.gms.internal.measurement.zzet: java.lang.String zzf
androidx.window.embedding.ActivityFilter: android.content.ComponentName componentName
com.google.android.gms.internal.measurement.zzem: java.lang.String zzh
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mAppId
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.Map consumerToJobMap
com.google.android.gms.internal.measurement.zzfr: int zzd
com.google.android.gms.internal.measurement.zzfj: java.lang.String zze
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzaf
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
androidx.window.R$attr: int splitMinSmallestWidth
androidx.window.embedding.ActivityRule: java.util.Set filters
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
androidx.window.layout.SidecarCompat: java.util.Map windowListenerRegisteredContexts
androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
com.google.android.gms.internal.measurement.zzjk: int zzb
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzP
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.google.android.gms.internal.measurement.zzfp: com.google.android.gms.internal.measurement.zzgi zzg
com.google.android.gms.internal.measurement.zzei: com.google.android.gms.internal.measurement.zzei zza
kotlinx.coroutines.DefaultExecutor: int debugStatus
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
com.google.android.gms.internal.measurement.zzet: boolean zzh
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
com.google.android.gms.internal.measurement.zzgp: com.google.android.gms.internal.measurement.zzli zzd
com.google.android.gms.internal.measurement.zzek: boolean zzl
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzj
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
com.google.android.gms.measurement.internal.zzac: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzt
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
com.google.android.gms.internal.measurement.zzgb: com.google.android.gms.internal.measurement.zzgb zza
androidx.window.R$styleable: int[] SplitPairFilter
kotlinx.coroutines.CompletedExceptionally: int _handled
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity
com.google.android.gms.internal.measurement.zzet: boolean zzj
androidx.window.embedding.SplitPairFilter: android.content.ComponentName secondaryActivityName
com.google.android.gms.internal.measurement.zzfh: com.google.android.gms.internal.measurement.zzfh zza
androidx.window.layout.SidecarCompat: java.util.Map componentCallbackMap
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
androidx.window.embedding.SplitRule: int layoutDirection
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTriggeredEventParams
com.google.android.gms.internal.measurement.zzgm: long zze
com.google.android.gms.internal.measurement.zzer: boolean zzf
androidx.window.layout.FoldingFeature$State: java.lang.String description
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
com.google.android.gms.internal.measurement.zzgm: double zzj
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzW
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
com.google.android.gms.internal.measurement.zzfb: com.google.android.gms.internal.measurement.zzfb zza
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
com.google.android.gms.measurement.internal.zzli: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgy: double zzj
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
com.google.android.gms.internal.measurement.zzfr: com.google.android.gms.internal.measurement.zzfr zza
com.google.android.gms.internal.measurement.zzek: boolean zzh
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
com.google.android.gms.internal.measurement.zzfd: java.lang.String zze
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
com.google.android.gms.internal.measurement.zzgy: com.google.android.gms.internal.measurement.zzgy zza
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: java.lang.String MODULE_ID
androidx.window.layout.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
com.google.android.gms.internal.measurement.zzgd: long zzM
com.google.android.gms.internal.measurement.zzem: com.google.android.gms.internal.measurement.zzem zza
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: java.util.Map registeredPlugins
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
androidx.window.core.Version: int major
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$1
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
com.google.android.gms.internal.measurement.zzgt: com.google.android.gms.internal.measurement.zzgt zza
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
com.google.android.gms.internal.measurement.zzgk: com.google.android.gms.internal.measurement.zzgk zza
com.google.android.gms.internal.measurement.zzfx: java.lang.String zzf
com.google.android.gms.internal.measurement.zzfp: boolean zzh
com.google.android.gms.internal.measurement.zzgd: boolean zzF
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzgi zza
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter sidecarAdapter
com.google.android.gms.internal.measurement.zzem: boolean zzg
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension
com.google.android.gms.internal.measurement.zzgy: int zze
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzff zza
com.google.android.gms.internal.measurement.zzfh: int zzd
com.google.android.gms.internal.measurement.zzer: int zze
androidx.window.core.Version: androidx.window.core.Version CURRENT
androidx.window.R$styleable: int[] SplitPlaceholderRule
com.google.android.gms.internal.measurement.zzfx: float zzh
com.google.android.gms.internal.measurement.zzek: int zze
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
androidx.window.embedding.ActivityStack: boolean isEmpty
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.layout.SidecarAdapter sidecarAdapter
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.google.android.gms.internal.measurement.zzfn: java.lang.String zze
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzli zzG
com.google.android.gms.internal.measurement.zzgd: long zzN
kotlin.jvm.internal.FunctionReference: int flags
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterOverlaySurface: int id
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzaa
com.google.android.gms.internal.measurement.zzgd: int zzf
androidx.window.layout.DisplayCompatHelperApi17: androidx.window.layout.DisplayCompatHelperApi17 INSTANCE
com.google.android.gms.internal.measurement.zzft: int zzd
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggerTimeout
com.google.android.gms.internal.measurement.zzfb: java.lang.String zze
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
com.google.android.gms.internal.measurement.zzet: int zze
com.google.android.gms.internal.measurement.zzei: boolean zzh
com.google.android.gms.internal.measurement.zzgd: long zzx
com.google.android.gms.common.zzq: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
androidx.window.embedding.ActivityStack: java.util.List activities
com.google.android.gms.internal.measurement.zzft: int zzi
com.google.android.gms.internal.measurement.zzfx: com.google.android.gms.internal.measurement.zzli zzj
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zas mResultGuardian
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
com.google.android.gms.internal.measurement.zzgr: com.google.android.gms.internal.measurement.zzgr zza
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzgg zzS
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarDeviceState lastDeviceState
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
androidx.window.R$id: int androidx_window_activity_scope
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
androidx.window.R$styleable: int[] SplitPairRule
com.google.android.gms.internal.measurement.zzgm: com.google.android.gms.internal.measurement.zzgm zza
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: int MODULE_VERSION
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
com.google.android.gms.internal.measurement.zzet: boolean zzi
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
androidx.window.embedding.SplitController: java.util.Set staticSplitRules
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
androidx.window.embedding.SplitController: boolean sDebug
androidx.window.core.Version: int minor
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzlg zzT
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: java.util.concurrent.ExecutorService cachedThreadPool
com.google.android.gms.internal.measurement.zzfv: int zzd
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzli zzh
androidx.window.embedding.SplitRule: int minSmallestWidth
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfz: com.google.android.gms.internal.measurement.zzfn zzg
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules
com.google.android.gms.internal.measurement.zzey: com.google.android.gms.internal.measurement.zzey zza
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
androidx.window.core.Version: int patch
com.google.android.gms.internal.measurement.zzfp: com.google.android.gms.internal.measurement.zzgi zzf
com.google.android.gms.internal.measurement.zzft: long zzh
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: androidx.core.util.Consumer $consumer
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
com.google.android.gms.internal.measurement.zzgt: com.google.android.gms.internal.measurement.zzgp zzf
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance()
androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()
com.google.android.gms.internal.measurement.zzcb: zzcb()
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
com.google.firebase.database.core.Repo$TransactionStatus: com.google.firebase.database.core.Repo$TransactionStatus[] values()
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
com.google.firebase.platforminfo.LibraryVersion: LibraryVersion()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onLowMemory()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEvent(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)
androidx.lifecycle.ViewModel: ViewModel()
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
com.google.android.gms.internal.measurement.zzfo: zzfo()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
com.google.android.gms.internal.measurement.zzlb: zzlb()
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
com.google.android.gms.internal.measurement.zzfd: zzfd()
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
kotlin.jvm.internal.CallableReference: boolean isFinal()
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStarted(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.window.layout.WindowInfoTracker$Companion: void reset()
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: AppMeasurementDynamiteService()
com.google.android.gms.internal.measurement.zzfp: zzfp()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
androidx.window.embedding.ActivityFilter: java.lang.String toString()
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader()
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onConfigurationChanged(android.content.res.Configuration)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
com.google.firebase.heartbeatinfo.HeartBeatResult: HeartBeatResult()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
androidx.window.core.Bounds: boolean isEmpty()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivitySaveInstanceState(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcf,long)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
com.google.android.gms.internal.measurement.zzgr: zzgr()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearMeasurementEnabled(long)
com.google.android.gms.measurement.internal.zzah: com.google.android.gms.measurement.internal.zzah[] values()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
kotlinx.coroutines.internal.OpDescriptor: OpDescriptor()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
com.google.android.gms.internal.measurement.zzfe: zzfe()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void isDataCollectionEnabled(com.google.android.gms.internal.measurement.zzcf)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
androidx.window.embedding.ExtensionEmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
com.google.android.gms.internal.measurement.zzga: zzga()
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
com.google.android.gms.internal.measurement.zzlc: zzlc()
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
com.google.android.gms.internal.measurement.zzgh: zzgh()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
com.google.android.gms.measurement.AppMeasurementReceiver: AppMeasurementReceiver()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.window.embedding.SplitRule: boolean checkParentMetrics(android.view.WindowMetrics)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
com.google.firebase.database.connection.Connection$DisconnectReason: com.google.firebase.database.connection.Connection$DisconnectReason[] values()
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
com.google.firebase.database.core.EventRegistration: EventRegistration()
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityIntentPredicates$lambda-3(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
androidx.window.embedding.ActivityStack: boolean isEmpty()
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
androidx.window.layout.WindowMetricsCalculator$-CC: void reset()
androidx.window.layout.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
kotlinx.coroutines.scheduling.SchedulerTimeSource: SchedulerTimeSource()
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
com.google.android.gms.internal.measurement.zzlo: zzlo()
kotlin.jvm.internal.FunctionReference: boolean isInline()
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
com.google.android.gms.internal.measurement.zzmd: zzmd()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.google.firebase.analytics.FirebaseAnalytics: void setCurrentScreen(android.app.Activity,java.lang.String,java.lang.String)
androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
androidx.window.layout.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
com.google.android.gms.internal.measurement.zzlp: zzlp()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values()
androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
com.google.android.gms.internal.measurement.zzam: zzam()
kotlin.jvm.internal.Lambda: int getArity()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
androidx.window.layout.WindowMetrics: int hashCode()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenName()
androidx.window.embedding.MatcherUtils: MatcherUtils()
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: ExtensionWindowLayoutInfoBackend(androidx.window.extensions.layout.WindowLayoutComponent)
io.flutter.embedding.android.FlutterView: void setVisibility(int)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void generateEventId(com.google.android.gms.internal.measurement.zzcf)
androidx.window.layout.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenClass(com.google.android.gms.internal.measurement.zzcf)
com.google.firebase.analytics.FirebaseAnalytics: com.google.firebase.analytics.FirebaseAnalytics getInstance(android.content.Context)
androidx.arch.core.executor.ArchTaskExecutor: ArchTaskExecutor()
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
com.google.firebase.database.core.operation.Operation$OperationType: com.google.firebase.database.core.operation.Operation$OperationType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
androidx.collection.SimpleArrayMap: SimpleArrayMap()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1(androidx.window.layout.SidecarCompat,android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
androidx.fragment.app.FragmentTransitionImpl: FragmentTransitionImpl()
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color[] values()
kotlinx.coroutines.scheduling.WorkQueue: WorkQueue()
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
com.google.android.gms.internal.measurement.zzeh: zzeh()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
androidx.window.core.Bounds: Bounds(int,int,int,int)
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
androidx.window.layout.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.ExtensionInterfaceCompat)
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int)
kotlin.jvm.internal.TypeIntrinsics: TypeIntrinsics()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
kotlinx.coroutines.EventLoop: EventLoop()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: AnalyticsConnectorRegistrar()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: AccessibilityBridge$LocaleStringAttribute()
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
com.google.firebase.database.connection.Connection$DisconnectReason: com.google.firebase.database.connection.Connection$DisconnectReason valueOf(java.lang.String)
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
androidx.window.core.Bounds: boolean equals(java.lang.Object)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
com.google.android.gms.internal.measurement.zzbn: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.google.android.gms.internal.measurement.zzlm: com.google.android.gms.internal.measurement.zzlm[] values()
androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateParentMetricsPredicate(androidx.window.embedding.SplitRule)
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
com.google.android.gms.measurement.AppMeasurement: java.util.List getConditionalUserProperties(java.lang.String,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
androidx.window.embedding.EmptyEmbeddingComponent: EmptyEmbeddingComponent()
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
androidx.window.core.Bounds: int getRight()
com.google.android.gms.measurement.AppMeasurement: void endAdUnitExposure(java.lang.String)
com.google.android.gms.measurement.AppMeasurement: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void beginAdUnitExposure(java.lang.String,long)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
kotlinx.coroutines.channels.Receive: Receive()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
kotlinx.coroutines.CoroutineDispatcher: CoroutineDispatcher()
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion()
com.google.android.gms.internal.ads_identifier.zzc: zzc()
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
androidx.window.core.Version: int getPatch()
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
androidx.activity.ComponentActivity$NonConfigurationInstances: ComponentActivity$NonConfigurationInstances()
com.google.firebase.database.snapshot.Node$HashVersion: com.google.firebase.database.snapshot.Node$HashVersion valueOf(java.lang.String)
androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEventAndBundle(java.lang.String,java.lang.String,android.os.Bundle,com.google.android.gms.internal.measurement.zzcf,long)
com.google.android.gms.internal.measurement.zzki: zzki()
com.google.firebase.installations.remote.InstallationResponse: InstallationResponse()
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(java.util.Set)
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
androidx.window.layout.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
androidx.window.embedding.SplitRule: int getLayoutDirection()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
com.google.android.gms.internal.measurement.zzhz: zzhz()
androidx.window.core.Bounds: int getLeft()
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
androidx.collection.ArraySet: ArraySet()
androidx.window.layout.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter)
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
com.google.android.gms.internal.measurement.zzjk: zzjk()
com.google.firebase.database.core.Repo$TransactionStatus: com.google.firebase.database.core.Repo$TransactionStatus valueOf(java.lang.String)
androidx.window.embedding.SplitController: boolean isSplitSupported()
com.google.android.gms.internal.measurement.zzbo: zzbo()
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
com.google.firebase.database.snapshot.LeafNode$LeafType: com.google.firebase.database.snapshot.LeafNode$LeafType valueOf(java.lang.String)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.firebase.database.collection.ImmutableSortedMap: ImmutableSortedMap()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: java.util.List getComponents()
androidx.window.core.Version: boolean equals(java.lang.Object)
androidx.window.embedding.SplitPairFilter: int hashCode()
androidx.window.layout.FoldingFeature: boolean isSeparating()
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.database.tubesock.WebSocket$State: com.google.firebase.database.tubesock.WebSocket$State[] values()
androidx.window.layout.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
kotlin.jvm.internal.Intrinsics: Intrinsics()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
com.google.firebase.database.core.utilities.TreeNode: TreeNode()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.android.gms.internal.measurement.zzes: zzes()
androidx.window.embedding.SplitController: void registerRule(androidx.window.embedding.EmbeddingRule)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$didReinitializeFirebaseCore$1(com.google.android.gms.tasks.TaskCompletionSource)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStopped(com.google.android.gms.dynamic.IObjectWrapper,long)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
com.google.firebase.database.DatabaseRegistrar: com.google.firebase.database.FirebaseDatabaseComponent lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.google.android.gms.internal.measurement.zzgp: zzgp()
androidx.window.embedding.SplitController: SplitController(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.internal.AtomicOp: AtomicOp()
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDefaultEventParameters(android.os.Bundle)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
kotlinx.coroutines.CompletionHandlerBase: CompletionHandlerBase()
androidx.window.embedding.MatcherUtils: boolean areActivityOrIntentComponentsMatching$window_release(android.app.Activity,android.content.ComponentName)
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: java.util.List getComponents()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
kotlinx.coroutines.NodeList: NodeList()
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.google.android.gms.internal.measurement.zzfq: zzfq()
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getMaxUserProperties(java.lang.String,com.google.android.gms.internal.measurement.zzcf)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.core.Bounds: int getHeight()
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.SidecarCompat,android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void registerPlugin(java.lang.String,io.flutter.plugins.firebase.core.FlutterFirebasePlugin)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
androidx.window.embedding.SplitPairRule: boolean getFinishSecondaryWithPrimary()
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
com.google.android.gms.measurement.AppMeasurement: long generateEventId()
androidx.window.layout.WindowMetricsCalculator$-CC: androidx.window.layout.WindowMetricsCalculator getOrCreate()
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
com.google.android.gms.internal.measurement.zzff: zzff()
com.google.android.gms.internal.measurement.zznl: zznl()
androidx.window.embedding.ActivityRule: int hashCode()
com.google.firebase.database.core.view.QueryParams$ViewFrom: com.google.firebase.database.core.view.QueryParams$ViewFrom[] values()
androidx.lifecycle.ViewModelProvider$KeyedFactory: ViewModelProvider$KeyedFactory()
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
androidx.window.embedding.SplitController: void initialize(android.content.Context,int)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
com.google.android.gms.internal.measurement.zzkk: zzkk()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat)
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setEventInterceptor(com.google.android.gms.internal.measurement.zzci)
androidx.window.layout.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
androidx.window.embedding.EmbeddingRule: EmbeddingRule()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitRuleParser: SplitRuleParser()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.google.android.gms.signin.internal.zaa: zaa()
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
androidx.window.layout.WindowMetrics: java.lang.String toString()
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
com.google.android.gms.measurement.AppMeasurement: void beginAdUnitExposure(java.lang.String)
androidx.window.layout.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
kotlin.jvm.internal.FunctionReference: boolean isOperator()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
com.google.android.gms.internal.measurement.zzej: zzej()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
androidx.window.embedding.SplitController: void unregisterRule(androidx.window.embedding.EmbeddingRule)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
com.google.android.gms.internal.measurement.zzey: zzey()
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor[] values()
androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
com.google.firebase.database.DatabaseRegistrar: java.util.List getComponents()
androidx.concurrent.futures.AbstractResolvableFuture: AbstractResolvableFuture()
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState[] values()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityIntentPredicates(java.util.Set)
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
kotlinx.coroutines.internal.CtorCache: CtorCache()
com.google.android.gms.common.api.PendingResult: PendingResult()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getConditionalUserProperties(java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzcf)
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color valueOf(java.lang.String)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzjp: zzjp()
com.example.irrigation_control_panel.MainActivity: MainActivity()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat()
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: com.google.firebase.analytics.connector.AnalyticsConnector lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int)
com.google.android.gms.measurement.AppMeasurement: int getMaxUserProperties(java.lang.String)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsentThirdParty(android.os.Bundle,long)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
com.google.android.gms.internal.measurement.zzhb: zzhb()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,float)
kotlin.random.Random: Random()
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
androidx.window.layout.SidecarAdapter: java.lang.String access$getTAG$cp()
kotlin.jvm.internal.FunctionReference: int hashCode()
androidx.window.core.Bounds: int getTop()
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenClass()
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult()
com.google.android.gms.internal.measurement.zzks: zzks()
com.google.android.gms.internal.measurement.zzek: zzek()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
com.google.android.gms.internal.measurement.zznu: zznu()
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzaw: zzaw()
com.google.firebase.database.collection.RBTreeSortedMap$Builder$BooleanChunk: RBTreeSortedMap$Builder$BooleanChunk()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityCreated(com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle,long)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initialize(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcl,long)
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.firebase.database.core.SparseSnapshotTree: SparseSnapshotTree()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: FlutterFirebasePluginRegistry()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.internal.measurement.zzgk: zzgk()
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
kotlin.jvm.internal.CallableReference: boolean isAbstract()
com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState: com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState valueOf(java.lang.String)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCachedAppInstanceId(com.google.android.gms.internal.measurement.zzcf)
androidx.window.embedding.SplitController: SplitController()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void registerOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzci)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
kotlin.jvm.internal.CallableReference: boolean isOpen()
com.google.android.gms.internal.measurement.zzgj: zzgj()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPairPredicates(java.util.Set)
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
com.google.android.gms.common.api.Api$AbstractClientBuilder: Api$AbstractClientBuilder()
kotlinx.coroutines.internal.ThreadSafeHeap: ThreadSafeHeap()
androidx.window.layout.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
kotlin.jvm.internal.FunctionReference: boolean isInfix()
androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()
androidx.window.layout.WindowMetricsCalculator$-CC: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
com.google.android.gms.measurement.AppMeasurement: com.google.android.gms.measurement.AppMeasurement getInstance(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
com.google.android.gms.common.api.internal.zzb: zzb()
com.google.android.gms.internal.measurement.zzku: zzku()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void performAction(android.os.Bundle,com.google.android.gms.internal.measurement.zzcf,long)
com.google.firebase.concurrent.ExecutorsRegistrar: ExecutorsRegistrar()
io.flutter.view.AccessibilityBridge$StringAttribute: AccessibilityBridge$StringAttribute()
kotlinx.coroutines.CancelHandler: CancelHandler()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
com.google.android.gms.internal.measurement.zzfc: zzfc()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
com.google.firebase.database.Logger$Level: com.google.firebase.database.Logger$Level valueOf(java.lang.String)
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
com.google.firebase.database.snapshot.ChildrenNode: ChildrenNode()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1(androidx.core.util.Consumer)
androidx.window.embedding.SplitRule: SplitRule()
kotlin.jvm.internal.CallableReference: java.lang.String getName()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
androidx.fragment.app.FragmentActivity: FragmentActivity()
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
kotlinx.coroutines.ExecutorCoroutineDispatcher: ExecutorCoroutineDispatcher()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
androidx.window.layout.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
androidx.window.layout.SidecarAdapter$Companion: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
com.google.firebase.database.core.view.Event$EventType: com.google.firebase.database.core.view.Event$EventType[] values()
kotlinx.coroutines.scheduling.Task: Task()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void endAdUnitExposure(java.lang.String,long)
com.google.android.gms.internal.measurement.zzgc: zzgc()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.window.layout.WindowInfoTracker$-CC: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
androidx.window.layout.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(java.lang.Object)
io.flutter.plugins.firebase.database.FlutterFirebaseAppRegistrar: java.util.List getComponents()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.window.embedding.ActivityStack: java.lang.String toString()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
com.google.android.gms.internal.measurement.zzfh: zzfh()
com.google.android.gms.internal.common.zzc: zzc()
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.window.layout.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getAppInstanceId(com.google.android.gms.internal.measurement.zzcf)
com.google.firebase.analytics.FirebaseAnalytics: com.google.android.gms.measurement.internal.zzij getScionFrontendApiImplementation(android.content.Context,android.os.Bundle)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void resetAnalyticsData(long)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
kotlinx.coroutines.JobCancellingNode: JobCancellingNode()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isSplitSupported()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.gms.internal.measurement.zzky: zzky()
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
kotlin.internal.jdk8.JDK8PlatformImplementations: JDK8PlatformImplementations()
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
androidx.window.layout.WindowInfoTracker$-CC: void reset()
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: SidecarCompat$DistinctSidecarElementCallback(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
com.google.android.gms.common.api.internal.zzd: zzd()
com.google.android.gms.internal.measurement.zzmn: zzmn()
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
com.google.android.gms.tasks.TaskCompletionSource: TaskCompletionSource()
androidx.fragment.app.FragmentManagerState: FragmentManagerState()
com.google.firebase.database.core.view.Event$EventType: com.google.firebase.database.core.view.Event$EventType valueOf(java.lang.String)
androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
com.google.android.gms.measurement.AppMeasurement: java.util.Map getUserProperties(java.lang.String,java.lang.String,boolean)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.app.Activity)
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(android.content.ComponentName,android.content.ComponentName)
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
androidx.window.embedding.SplitController: void clearRegisteredRules()
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: GlobalLibraryVersionRegistrar()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
androidx.window.embedding.SplitRule: float getSplitRatio()
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.legacy.content.WakefulBroadcastReceiver: WakefulBroadcastReceiver()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
androidx.window.embedding.SplitController: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
androidx.window.layout.WindowLayoutInfo: int hashCode()
kotlin.jvm.internal.ReflectionFactory: ReflectionFactory()
androidx.window.R$id: R$id()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
androidx.window.embedding.ActivityStack: java.util.List getActivities$window_release()
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
kotlinx.coroutines.internal.LockFreeLinkedListNode: LockFreeLinkedListNode()
com.google.android.gms.internal.measurement.zzfs: zzfs()
com.google.android.gms.internal.measurement.zzgg: zzgg()
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
com.google.firebase.appcheck.AppCheckTokenResult: AppCheckTokenResult()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.internal.jdk7.JDK7PlatformImplementations: JDK7PlatformImplementations()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String)
com.google.firebase.database.core.utilities.DefaultRunLoop: DefaultRunLoop()
com.google.android.gms.internal.measurement.zzka: zzka()
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int)
androidx.window.core.Version: java.math.BigInteger getBigInteger()
kotlinx.coroutines.internal.LockFreeLinkedListHead: LockFreeLinkedListHead()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
com.google.android.gms.internal.measurement.zzfw: zzfw()
androidx.lifecycle.ViewModelStore: ViewModelStore()
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
com.google.android.gms.internal.measurement.zzgt: zzgt()
androidx.fragment.app.FragmentManagerImpl: FragmentManagerImpl()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
kotlinx.coroutines.YieldContext: YieldContext()
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: FlutterFirebaseCoreRegistrar()
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
com.google.android.gms.internal.measurement.zzgi: zzgi()
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
com.google.android.gms.internal.measurement.zzmc: zzmc()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.SidecarWindowBackend)
com.google.firebase.database.snapshot.Node$HashVersion: com.google.firebase.database.snapshot.Node$HashVersion[] values()
androidx.window.layout.WindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
androidx.window.embedding.SplitInfo: java.lang.String toString()
androidx.window.layout.ExtensionInterfaceCompat: boolean validateExtensionInterface()
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addListener(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
androidx.window.layout.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
com.google.firebase.database.Logger$Level: com.google.firebase.database.Logger$Level[] values()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
com.google.android.gms.measurement.AppMeasurementService: AppMeasurementService()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: ExtensionWindowLayoutInfoBackend$MulticastConsumer(android.app.Activity)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
androidx.window.core.Bounds: int hashCode()
com.google.firebase.database.core.view.QueryParams$ViewFrom: com.google.firebase.database.core.view.QueryParams$ViewFrom valueOf(java.lang.String)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
com.google.android.gms.internal.measurement.zzfv: zzfv()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMeasurementEnabled(boolean,long)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
kotlin.collections.IntIterator: IntIterator()
com.google.android.gms.measurement.AppMeasurement: void logEventInternal(java.lang.String,java.lang.String,android.os.Bundle)
com.google.android.gms.internal.measurement.zzha: zzha()
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: AbstractResolvableFuture$Waiter()
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.window.core.Version$Companion: Version$Companion()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getGmpAppId()
androidx.window.core.Bounds: int getWidth()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.internal.measurement.zzae: zzae()
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPredicates(java.util.Set)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
androidx.window.embedding.ActivityStack: int hashCode()
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)
com.google.firebase.database.connection.Connection$State: com.google.firebase.database.connection.Connection$State valueOf(java.lang.String)
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
com.google.firebase.database.core.operation.Operation$OperationType: com.google.firebase.database.core.operation.Operation$OperationType[] values()
com.google.firebase.database.core.operation.OperationSource$Source: com.google.firebase.database.core.operation.OperationSource$Source[] values()
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter)
com.google.firebase.analytics.FirebaseAnalytics: java.lang.String getFirebaseInstanceId()
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenName(com.google.android.gms.internal.measurement.zzcf)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
kotlin.internal.PlatformImplementations: PlatformImplementations()
androidx.window.layout.SidecarWindowBackend$Companion: void resetInstance()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.util.List)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzob: com.google.android.gms.internal.measurement.zzob[] values()
androidx.window.embedding.ExtensionEmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
com.google.android.gms.internal.measurement.zzfu: zzfu()
com.google.firebase.database.snapshot.LeafNode$LeafType: com.google.firebase.database.snapshot.LeafNode$LeafType[] values()
com.google.android.gms.internal.measurement.zzkv: zzkv()
androidx.window.core.Bounds: android.graphics.Rect toRect()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logHealthData(int,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper)
com.google.android.gms.internal.measurement.zzkn: zzkn()
com.google.android.gms.internal.measurement.zzhn: zzhn()
kotlinx.coroutines.CancelHandlerBase: CancelHandlerBase()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: java.util.List getComponents()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.window.R: R()
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.window.core.Bounds: int getBottom()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setSessionTimeoutDuration(long)
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getAppInstanceId()
androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void unregisterOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzci)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
com.google.android.gms.internal.measurement.zzgy: zzgy()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getSessionId(com.google.android.gms.internal.measurement.zzcf)
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
com.google.firebase.database.logging.Logger$Level: com.google.firebase.database.logging.Logger$Level[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityDestroyed(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op()
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzem: zzem()
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
com.google.android.gms.internal.measurement.zzgd: zzgd()
androidx.window.core.Bounds: boolean isZero()
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
com.google.android.gms.internal.measurement.zzko: zzko()
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
com.google.android.gms.internal.measurement.zzfr: zzfr()
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
kotlin.jvm.internal.FunctionReference: boolean isExternal()
androidx.window.embedding.SplitPairRule: boolean getFinishPrimaryWithSecondary()
androidx.window.embedding.SplitInfo: float getSplitRatio()
androidx.window.layout.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter()
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
androidx.window.layout.SidecarCompat: SidecarCompat(android.content.Context)
kotlinx.coroutines.channels.Send: Send()
com.google.firebase.database.logging.Logger$Level: com.google.firebase.database.logging.Logger$Level valueOf(java.lang.String)
com.google.firebase.database.core.persistence.PruneForest: PruneForest()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setCurrentScreen(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,java.lang.String,long)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.R$styleable: R$styleable()
kotlinx.coroutines.JobNode: JobNode()
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
com.google.android.gms.internal.measurement.zzfz: zzfz()
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
androidx.window.layout.ActivityCompatHelperApi30: ActivityCompatHelperApi30()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.window.java.R: R()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
kotlin.jvm.internal.CallableReference: boolean isSuspend()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
kotlin.jvm.internal.CallableReference: CallableReference()
androidx.window.embedding.EmbeddingTranslatingCallback: EmbeddingTranslatingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingAdapter)
com.google.android.gms.measurement.AppMeasurementJobService: AppMeasurementJobService()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getUserProperties(java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzcf)
kotlin.jvm.internal.Lambda: Lambda(int)
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.arch.core.internal.SafeIterableMap: SafeIterableMap()
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
com.google.firebase.StartupTime: StartupTime()
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
androidx.fragment.app.Fragment: Fragment()
com.google.android.gms.internal.measurement.zzge: zzge()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getSplitRules()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
com.google.android.gms.internal.measurement.zzbn: android.os.IBinder asBinder()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
androidx.window.core.Version: int getMajor()
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPairPredicates$lambda-1(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
com.google.android.gms.internal.measurement.zzgm: zzgm()
androidx.core.view.ViewCompat$UnhandledKeyEventManager: ViewCompat$UnhandledKeyEventManager()
androidx.window.embedding.SplitPairRule: boolean getClearTop()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(android.app.Activity,androidx.window.core.Bounds)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
com.google.android.gms.internal.measurement.zzgb: zzgb()
com.google.firebase.database.core.RepoInfo: RepoInfo()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
androidx.window.core.Version: int compareTo(java.lang.Object)
com.google.android.gms.internal.measurement.zzft: zzft()
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.lang.Object)
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: ModuleDescriptor()
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
kotlin.jvm.internal.FunctionReference: int getArity()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityResumed(com.google.android.gms.dynamic.IObjectWrapper,long)
kotlinx.coroutines.EventLoopImplBase: EventLoopImplBase()
androidx.window.embedding.SplitController: java.util.Set getSplitRules()
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserId(java.lang.String,long)
com.google.android.gms.internal.measurement.zzei: zzei()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
com.google.android.gms.common.internal.zzj: zzj()
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
com.google.firebase.installations.remote.TokenResult: TokenResult()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
com.google.android.gms.internal.measurement.zzoa: com.google.android.gms.internal.measurement.zzoa[] values()
com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState: com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState[] values()
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeListener(androidx.core.util.Consumer)
androidx.window.core.Version: int getMinor()
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
com.google.android.gms.internal.measurement.zzfj: zzfj()
androidx.window.core.Version: java.lang.String getDescription()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
androidx.window.layout.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
androidx.window.layout.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
com.google.android.gms.internal.measurement.zzet: zzet()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
com.google.android.gms.internal.measurement.zzer: zzer()
androidx.window.layout.HardwareFoldingFeature: int hashCode()
com.google.android.gms.internal.measurement.zznk: zznk()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
com.google.android.gms.internal.measurement.zzlx: zzlx()
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
androidx.window.layout.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.window.layout.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component2(android.util.Pair)
androidx.window.layout.SidecarWindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
androidx.window.layout.EmptyDecorator: EmptyDecorator()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
com.google.android.gms.internal.base.zac: zac()
androidx.window.core.Version: Version(int,int,int,java.lang.String)
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
androidx.window.embedding.EmptyEmbeddingComponent: void setSplitInfoCallback(java.util.function.Consumer)
androidx.window.layout.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
kotlin.jvm.internal.Lambda: java.lang.String toString()
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
com.google.firebase.installations.local.PersistedInstallationEntry: PersistedInstallationEntry()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
com.google.android.gms.internal.measurement.zzfn: zzfn()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
androidx.window.embedding.SplitPairRule: int hashCode()
com.google.android.gms.tasks.Task: Task()
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
androidx.window.core.Bounds: java.lang.String toString()
androidx.window.embedding.EmbeddingAdapter: boolean translateIntentPredicates$lambda-8(java.util.Set,android.content.Intent)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: AccessibilityBridge$CustomAccessibilityAction()
kotlin.jvm.internal.PropertyReference: PropertyReference()
androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
com.google.android.gms.internal.measurement.zzkt: com.google.android.gms.internal.measurement.zzkt[] values()
com.google.firebase.database.core.operation.OperationSource$Source: com.google.firebase.database.core.operation.OperationSource$Source valueOf(java.lang.String)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
androidx.window.layout.WindowInfoTracker$-CC: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getTestFlag(com.google.android.gms.internal.measurement.zzcf,int)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
androidx.window.layout.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.SidecarCompat)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: FirebaseCommonKtxRegistrar()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
com.google.firebase.database.tubesock.WebSocket$State: com.google.firebase.database.tubesock.WebSocket$State valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
androidx.window.core.Version: java.lang.String toString()
com.google.android.gms.internal.measurement.zzfx: zzfx()
androidx.window.layout.SidecarAdapter: SidecarAdapter()
androidx.window.layout.SidecarCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component1(android.util.Pair)
com.google.firebase.database.connection.Connection$State: com.google.firebase.database.connection.Connection$State[] values()
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: GeneratedAndroidFirebaseCore$PigeonFirebaseOptions()
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityPaused(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDataCollectionEnabled(boolean)
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsent(android.os.Bundle,long)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateIntentPredicates(java.util.Set)
androidx.window.core.Version: int hashCode()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setInstanceIdProvider(com.google.android.gms.internal.measurement.zzck)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.google.android.gms.internal.measurement.zzel: zzel()
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
androidx.window.layout.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
com.google.android.gms.internal.measurement.zzii: zzii()
androidx.window.layout.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPredicates$lambda-6(java.util.Set,android.app.Activity)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.collection.SparseArrayCompat: SparseArrayCompat()
androidx.window.layout.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.measurement.zzgl: zzgl()
com.google.android.gms.internal.measurement.zzho: zzho()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: WindowInfoTrackerCallbackAdapter$addListener$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
androidx.window.R$attr: R$attr()
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$getPluginConstantsForFirebaseApp$0(com.google.firebase.FirebaseApp,com.google.android.gms.tasks.TaskCompletionSource)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMinimumSessionDuration(long)
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.embedding.SplitRule: int hashCode()
com.google.android.gms.internal.measurement.zzc: zzc()
androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
com.google.firebase.database.core.view.QueryParams: QueryParams()
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion()
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserProperty(java.lang.String,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,boolean,long)
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitRules(java.util.Set)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getGmpAppId(com.google.android.gms.internal.measurement.zzcf)
io.flutter.plugins.firebase.database.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
androidx.window.embedding.SplitInfo: int hashCode()
com.google.firebase.analytics.ktx.FirebaseAnalyticsKtxRegistrar: FirebaseAnalyticsKtxRegistrar()
androidx.window.embedding.EmbeddingAdapter: boolean translateParentMetricsPredicate$lambda-4(androidx.window.embedding.SplitRule,android.view.WindowMetrics)
com.google.android.gms.internal.measurement.zzcb: com.google.android.gms.internal.measurement.zzcc asInterface(android.os.IBinder)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initForTests(java.util.Map)
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(androidx.window.embedding.EmbeddingInterfaceCompat)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConditionalUserProperty(android.os.Bundle,long)
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
androidx.window.embedding.SplitRule: int getMinSmallestWidth()
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
com.google.android.gms.internal.measurement.zzag: zzag()
androidx.window.embedding.EmbeddingCompat: void setSplitRules(java.util.Set)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
androidx.window.embedding.ActivityFilter: int hashCode()
com.google.firebase.database.core.utilities.ParsedUrl: ParsedUrl()
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
com.google.android.gms.internal.measurement.zzbl: com.google.android.gms.internal.measurement.zzbl[] values()
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
com.google.android.gms.dynamite.zzn: zzn()
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.app.Activity)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds)
com.google.firebase.database.DatabaseRegistrar: DatabaseRegistrar()
kotlinx.coroutines.MainCoroutineDispatcher: MainCoroutineDispatcher()
com.google.android.gms.measurement.AppMeasurement: void setConditionalUserProperty(com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty)
androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
androidx.window.layout.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
com.google.android.gms.internal.measurement.zzfb: zzfb()
androidx.window.embedding.EmptyEmbeddingComponent: void setEmbeddingRules(java.util.Set)
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: FragmentTransition$FragmentContainerTransition()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
androidx.window.embedding.SplitController: void removeSplitListener(androidx.core.util.Consumer)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse: GeneratedAndroidFirebaseCore$PigeonInitializeResponse()
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
androidx.window.embedding.SplitRule: int getMinWidth()
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
